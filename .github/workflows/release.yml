name: release delivery

on:
  push:
    branches:
      - "release" # Run on release branch
      - "release/*" # Ejecutar en todas las ramas de versión

jobs:
  release-delivery:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Log in to Dockerhub
      - name: Log in to Dockerhub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Paso de construcción
      - name: Build
        run: |
          cd practica3
          docker build -t epum/agify:latest -f agify.dockerfile .
          docker build -t epum/genderize:latest -f genderize.dockerfile .
          docker build -t epum/main:latest -f main.dockerfile .
          echo "All images built successfully!"

      # Paso de prueba (puedes agregar tus propios pasos de prueba aquí)
      - name: Test
        run: |
          echo "Running tests..."
          echo "All tests passed successfully!"

      # Obtener la última versión y generar la nueva versión
      - name: Get last version and generate new version
        id: version
        run: |
          LAST_VERSION=$(git describe --tags --abbrev=0)
          NEW_VERSION=${LAST_VERSION/v1./}
          NEW_VERSION=$((NEW_VERSION + 1))
          echo "::set-output name=new_version::v1.$NEW_VERSION"

      # Crear y empujar la nueva etiqueta de versión
      - name: Create and push version tag
        run: |
          NEW_TAG=${{ steps.version.outputs.new_version }}
          git tag $NEW_TAG
          git push origin $NEW_TAG

      # Paso de entrega
      - name: Deliver
        run: |
          cd practica3
          docker push epum/agify:latest
          docker push epum/genderize:latest
          docker push epum/main:latest
          echo "Images delivered successfully!"